{"version":3,"sources":["images/profilepic.JPG","components/Header.jsx","components/About.jsx","components/Resume.jsx","components/Projects.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","networks","social","map","network","key","name","href","url","className","state","id","title","main","description","Component","About","src","img","alt","about","bio","address","street","city","zip","phone","email","resumeDownload","Resume","education","resume","college","branch","year","location","techStack","skills","techstack","skill","process","programmingSkills","programming","console","log","Projects","open","togglePanel","bind","e","this","setState","projects","project","date","short","link","demo","Footer","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7887f1c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepic.fb2f0bce.JPG\";","import React, { Component } from 'react';\r\nimport main from '../data/main.json';\r\nimport social from '../data/social.json';\r\nimport '../css/layout.css';\r\nimport '../css/mediaqueries.css';\r\n\r\n\r\nexport default class Header extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n      \r\n    }\r\n   \r\n     networks = () =>(\r\n        \r\n        social.map(network=>{\r\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>;\r\n    })\r\n     )\r\n    render(){\r\n       \r\n        return(\r\n           \r\n            <header id=\"home\">\r\n\r\n            <nav id=\"nav-wrap\">\r\n\r\n                 <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n                <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\r\n\r\n                <ul id=\"nav\" className=\"nav\">\r\n                    <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n                     <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n                     <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n                    <li><a className=\"smoothscroll\" href=\"#projects\">Projects</a></li>\r\n                    <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n                </ul>\r\n\r\n            </nav>\r\n                <div className=\"row banner\">\r\n                    <div className=\"banner-text\">\r\n                        <h1 className=\"responsive-headline\">I'm {main[0].name}.</h1>\r\n                            {/* <pre>\r\n                                I'm <TypeWriterEffect\r\n                                        textStyle={{\r\n                                        fontFamily: 'Red Hat Display',\r\n                                        color: '#3F3D56',\r\n                                        fontWeight: 500,\r\n                                        fontSize: '1.5em',\r\n                                        \r\n                                        }}\r\n                                        startDelay={2000}\r\n                                        cursorColor=\"#3F3D56\"\r\n                                        multiText={[\r\n                                        'first',\r\n                                        'second',\r\n                                        'third',\r\n                                       \r\n                                        ]}\r\n                                        loop={true}\r\n                                        nextTextDelay={1000}\r\n                                        typeSpeed={30}\r\n                                        \r\n                                    />\r\n                            </pre> */}\r\n                     \r\n                        \r\n                        \r\n                        <h3>{main[0].description}.</h3>\r\n                        <hr />\r\n                        <ul className=\"social\">\r\n                            <this.networks />\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <p className=\"scrolldown\">\r\n                    <a className=\"smoothscroll\" href=\"#about\"><i className=\"fa fa-chevron-circle-down\"></i></a>\r\n                </p>\r\n            </header>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react'; \r\nimport about from '../data/about.json';\r\nimport img from '../images/profilepic.JPG';\r\n//import '../css/layout.css';\r\nimport './about.css';\r\nimport '../css/mediaqueries.css';\r\nexport default class About extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={};\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"about\">\r\n                <div className=\"about-profile-pic\">\r\n                        <img className=\"profile-pic\" src={img} alt=\"saisitaram profilepic\"/>\r\n                </div>\r\n                <div className=\"about-person\">\r\n                    <div className=\"about-person-bio\">\r\n                        <h2>About Me</h2>\r\n                        <p>{about[0].bio}</p>\r\n                    </div>\r\n                    <div className=\"about-person-contact-resume\">\r\n                        <div className=\"about-person-contact-resume-contact-details\">\r\n                            <h2>Contact Details</h2>\r\n                            <p className=\"address\">\r\n                                <span>{about[0].name}</span><br />\r\n                                <span>{about[0].address.street}<br />\r\n                                        {about[0].address.city},{about[0].address.state}<br />\r\n                                        {about[0].address.zip}\r\n                                </span><br />\r\n                                <span>{about[0].phone}</span><br />\r\n                                <span>{about[0].email}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"about-person-contact-resume-resume-download\">\r\n                            <p>\r\n                                <a href={about[0].resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport resume from '../data/resume.json';\r\nimport skills from '../data/skill.json'; \r\nimport '../css/layout.css';\r\nimport '../css/mediaqueries.css';\r\nimport './resume.css';\r\nexport default class Resume extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n      \r\n    }\r\n\r\n     education=()=>(\r\n       resume[0].education.map(education=>{\r\n           return <div key={education.college}><h3>{education.college}</h3>\r\n           <p className=\"info\">{education.branch} <span>&bull;</span><em className=\"date\">{education.year}</em></p>\r\n           <p id=\"loc\">{education.location}</p></div>\r\n       })\r\n    )\r\n\r\n    techStack = () =>(\r\n        skills.techstack.map(skill=>{\r\n            return <div className=\"skill-techstack-list-item\" key={skill.name}>\r\n                <img className=\"skill-techstack-fig\" src={process.env.PUBLIC_URL+skill.img} alt={skill.name}/>\r\n                <h5 className=\"skill-title\">{skill.name}</h5>\r\n            </div>\r\n        })\r\n\r\n    )\r\n   programmingSkills = () =>(\r\n        skills.programming.map(skill=>{\r\n            return <div className=\"skill-programming-list-item\" key={skill.name}>\r\n                <img className=\"skill-programming-fig\" src={process.env.PUBLIC_URL+skill.img} alt={skill.name}/>\r\n                <h5 className=\"skill-title\">{skill.name}</h5>\r\n            </div>\r\n        })\r\n\r\n    )\r\n\r\n    // skills=()=>(\r\n    //     resume[0].skills.map(skill=>{\r\n    //         var className = 'bar-expand '+skill.name.toLowerCase();\r\n    //         return <li key={skill.name}><span style={{width:(skill.level)}}className={className}></span><em>{skill.name}</em></li>\r\n    //     })\r\n    // )\r\n\r\n    render(){\r\n        console.log(resume[0].education);\r\n        return(\r\n    <section id=\"resume\">\r\n        <div className=\" education\">\r\n            <div className=\"three columns header-col\">\r\n                <h1><span>Education</span></h1>\r\n            </div>\r\n            <div className=\"nine columns main-col\">\r\n                <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                        <this.education />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            <div className=\"skill-page\">\r\n                <h2 id=\"skill-header\"><span>Skills</span></h2>\r\n                <div className=\"skill\">\r\n                    <div className=\"skill-techstack\">\r\n                        <div className=\"skill-header-col\">\r\n                            <h1><span>TECHSTACK</span></h1>\r\n                        </div>\r\n\r\n                        <div className=\"skill-techstack-list\">\r\n                            <this.techStack/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"skill-programming\">\r\n                        <div className=\"skill-header-col\">\r\n                            <h1><span>programming</span></h1>\r\n                        </div>\r\n\r\n                        <div className=\"skill-programming-list\">\r\n                            <this.programmingSkills/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"skill-others\">\r\n                        <div className=\"skill-header-col\">\r\n                            <h1><span>Others</span></h1>\r\n                        </div>\r\n\r\n                        <div className=\"skill-others-list\">\r\n                            <h5 className=\"skill-others-list-item\"><span>&bull;</span> Data Structures and Algorithms</h5>\r\n                            <h5 className=\"skill-others-list-item\"><span>&bull;</span>OOPS</h5>\r\n                            <h5 className=\"skill-others-list-item\"><span>&bull;</span>DBMS</h5>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n               \r\n        </div>\r\n    </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport projects from '../data/projects.json';\nimport './projects.css';\nimport '../css/mediaqueries.css';\nexport default class Projects extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             open:false,\n           \n        }\n        this.togglePanel=this.togglePanel.bind(this);\n    }\n    togglePanel(e){\n        this.setState({open: !this.state.open});\n    }\n    \n    render() {\n        //  const img=require(\"../images/recipe.jpg\")\n        \n        return projects?(\n            <div className=\"project-list\">\n                <h2 id=\"project-header\"><span>projects</span></h2>\n                <div className=\"project-list-items\">\n                    {projects.map((project)=>(\n                    \n                    <div className=\"project-list-single\" key={project.name}>\n                        <div className=\"project-list-single-top\">\n                            <div className=\"project-list-single-top-fig\">\n                                <img \n                                    className=\"project-list-single-fig\" \n                                    src={process.env.PUBLIC_URL+project.img} \n                                    alt=\"restaurant\"\n                                />\n                            </div>\n                            <div className=\"project-list-single-top-header\">\n                                    <h1 className=\"project-title\">{project.name}</h1>\n                                    <h3 className=\"project-date\">{project.date}</h3>\n                            </div>\n                        </div>\n                        \n                        <div className=\"project-list-single-data\">\n                            <div className=\"project-list-single-data-short-description\">\n                                <h3 className=\"project-short-description\">{project.short}</h3>\n                            </div>\n                            <div className=\"project-single-links\">\n                                <div className=\"project-link\">\n                                    <p>\n                                        <a href={project.link} className=\"button\">Github</a>\n                                    </p>\n                                </div>\n                                {project.demo?\n                                (<div className=\"project-link\">\n                                    <p>\n                                        <a href={project.demo} className=\"button\">DemoLive</a>\n                                    </p>\n                                </div>):null};\n                            </div>\n                        </div>\n\n                    </div> \n\n                ))}\n\n            </div>\n            \n            </div>\n        ):(\n            <div />\n        );\n      \n    }\n}\n","import React, { Component } from 'react';\nimport social from '../data/social.json';\nimport '../css/layout.css';\nimport './footer.css';\nimport '../css/mediaqueries.css';\n\nclass Footer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n      \n    }\n    networks = () =>(\n        \n        social.map(network=>{\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>;\n    })\n     )\n  render() {\n\n    // if(this.props.data){\n    //   var networks= this.props.data.social.map(function(network){\n    //     return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n    //   })\n    // }\n    \n\n    return (\n         <div className=\"footer-page\">\n            <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n            \n            <div className=\"footer-social\">\n               <ul className=\"social-links\">\n                  <this.networks/>\n               </ul>\n            </div>\n            <p className=\"footer-text\">\n               Have a project for me? Think I'd be a good fit for your Organisation? I'd love to hear from you, give me a shout by one of my social network platforms.\n            </p>\n         </div>\n    );\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Projects from './components/Projects';\nimport Footer from './components/Footer';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <About />\n      <Resume />\n      <Projects/>\n      {/* <Contact/> */}\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}